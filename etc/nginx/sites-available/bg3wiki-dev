# Easily toggle logging on/off here
#map "" $bg3_log {
#	default 0;
#}

#map $request_uri $bg3_log_pagehits {
#	default    0;
#	"~^/wiki/" 0; # disabled for now
#}

#log_format bg3wiki_pagehits
#	'$time_iso8601 $remote_addr $status '
#	'$request_uri $http_referer "$http_user_agent"';

server {
	listen 443 ssl;
	server_name dev.bg3.wiki;

	ssl_certificate     /etc/letsencrypt/live/bg3.wiki/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bg3.wiki/privkey.pem;

	access_log /var/log/nginx/dev-bg3wiki-access.log combined if=$bg3_log;
	access_log /var/log/nginx/dev-bg3wiki-cache.log mwfc_stats if=$mwfc_log;
	error_log /var/log/nginx/dev-bg3wiki-error.log;

	access_log /var/log/nginx/dev-bg3wiki-pagehits.log
		bg3wiki_pagehits if=$bg3_log_pagehits;

	log_not_found off;

	root /var/www/bg3;

	#include headers/default;
	#include headers/unsafe-csp;
	include headers/strict-hsts;

	### LibreSpeed ###

	location /speedtest {
	}

	location ~ ^/speedtest/backend/.*\.php$ {
		include snippets/run-php-direct;
	}

	### END LibreSpeed ###

	### Payment ###

	location /payment {
	}

	location /payment/requests {
		return 403;
	}

	location /payment/riddle/clients {
		return 403;
	}

	location ~ ^/payment/.*\.php$ {
		include snippets/run-php-direct;
	}

	### END Payment ###

	# ads.txt from Playwire
	location = /ads.txt {
		return 307 https://config.playwire.com/dyn_ads/1025372/75208/ads.txt;
	}

	# No cache for robots, sitemaps
	location ~ ^/(robots|sitemap) {
	}

	# Static assets outside of MediaWiki
	location ~ ^/(favicon|static) {
		include headers/cache-30d;
	}

	# Custom CSS and JS code
	location ~ ^/(css|js)/ {
		# No cache on dev subdomain
	}

	# Custom PHP scripts
	location /php/ {
		include snippets/run-php-direct;
	}

	# Root URL is main page
	location = / {
		fastcgi_index w/index.php;
		include snippets/run-php-direct;
	}

	location = /wiki/Main_Page {
		return 301 /;
	}

	# Location for wiki's entry points
	location ~ ^/w/(index|load|api|thumb|opensearch_desc|rest)\.php$ {
		include snippets/run-php-direct;
	}

	# Block Discord's broken page preview tool
	location = /w/api.php {
		if ($http_user_agent ~ "Discordbot") {
			return 403;
		}
		include snippets/run-php-direct;
	}

	# Images
	location /w/images {
		include headers/cache-1d;
	}
	location /w/images/deleted {
		deny all;
	}

	# Stupid bots keep requesting directories, triggering error logs
	location ~ ^/w/images(/.*)?/$ {
		return 404;
	}

	# MediaWiki assets (usually images)
	location ~ ^/w/resources/(assets|lib|src) {
		include headers/cache-30d;
	}

	# Assets, scripts and styles from skins and extensions
	location ~ ^/w/(skins|extensions)/.+\.(css|js|gif|ico|jpg|jpeg|png|svg|webp|wasm|ttf|woff|woff2)$ {
		include headers/cache-30d;
	}

	# Handling for Mediawiki REST API, see [[mw:API:REST_API]]
	location /w/rest.php/ {
		try_files $uri $uri/ /w/rest.php?$query_string;
	}

	# Handling for the article path (pretty URLs)
	location /wiki/ {
		rewrite ^/wiki/(?<pagename>.*)$ /w/index.php;
	}

	# Every other entry point will be disallowed.
	# Add specific rules for other entry points/images as needed above this
	location / {
		return 404;
	}
}

server {
	listen 80;
	server_name dev.bg3.wiki;

	access_log /var/log/nginx/dev-bg3wiki-redirect.log combined if=$bg3_log;
	error_log /var/log/nginx/dev-bg3wiki-error.log;

	include snippets/letsencrypt;

	location / {
		return 301 https://dev.bg3.wiki$request_uri;
	}
}
